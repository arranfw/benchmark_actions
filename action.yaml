name: 'Start benchmark timer'
description: 'starts a timer'
inputs:
  timer_name:
    description: 'Name of the timer'
    required: true
outputs:
  start_time:
    description: "Timestamp of the start of the job"
    value: ${{ steps.start_time.outputs.timer_start }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Get current timestamp
      shell: bash
      id: current_timestamp
      run: printf 'start_time=%(%s)T\n' >> "$GITHUB_OUTPUT"
    - name: Set start timestamp
      shell: bash
      id: start-time
      run: |
        # printf 'install_start=%(%s)T\n'
        echo ${{steps.date.outputs.date}}
        # start_time_json=$( jq -n --arg test_duration $test_duration '[{"name": "test", "unit": "seconds", "value":$test_duration}]' )
        # printf 'timer_start=' >> "$GITHUB_OUTPUT"